---
import Navbar from "../components/Navbar.astro";
import RatingCard from "../components/RatingCard.astro";
import { getEntry } from "astro:content";
import Footer from "../components/Footer.astro";
import { MobileNavbar } from "../components/MobileNavbar";
import ReviewSection from "../components/ReviewSection.astro";
import { ClientRouter } from "astro:transitions";
import "../styles/global.css";

interface Props {
	key: string;
	primaryColor: string;
	secondaryColor: string;
	thumbnail: string;
	thumbnailUrl: string;
}

const { key, primaryColor, secondaryColor, thumbnail, thumbnailUrl } = Astro.props;
const entry = await getEntry("reviews", key);
if (!entry) {
	throw new Error("Entry undefined!");
}
const { data }  = entry;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />
		<title>W</title>
		<style define:vars={{ secondaryColor: secondaryColor.substring(4, secondaryColor.length - 1) }}>
			main {
				animation: 0.5s ease-out fadeInUp;
			}

			main.transition {
				background-color: var(--secondaryColor);
				transition-duration: 1.5s;
			}

			main:not(.transition) {
				transition-duration: 1.5s;
			}

			:global(.animate-visible) {
				animation: 0.8s ease-in fadeInUp;
			}
		</style>
	</head>
	<body>
		<Navbar color={secondaryColor} secondaryColor={primaryColor.substring(4, primaryColor.length - 1)}/>
		<MobileNavbar client:load color={secondaryColor} />
		<main class={`${primaryColor} md:pt-12 md:px-25 text-black h-full`}>
			<div class="px-5 md:px-0 md:py-14 py-10">
				<a data-astro-prefetch class={`${secondaryColor} p-3 rounded-2xl hover:underline hover:bg-black hover:text-white cursor-pointer`} href="/reviews">← See other reviews</a>
			</div>
			<hgroup class="px-5 md:px-0">
				<a href={thumbnailUrl} target="_blank">
					<img class="object-cover h-70 w-full mask-b-from-70% mask-b-to-100% cursor-pointer" src={thumbnail}></img>
				</a>
				<section class="p-3">
					<h1 class="font-bv text-2xl sm:text-4xl my-3">UNSW Course Reviews</h1>
					<h2 class="font-playfair font-bold text-4xl sm:text-6xl my-3">{`${data.id}: ${data.longTitle}`}</h2>
					<p class="font-bv text-md sm:text-xl my-3">{((date) => `${date[1]} ${date[2]}, ${date[3]}`)(new Date(data.dateReviewed).toDateString().split(" "))}</p>
					<div class="mt-6">
						<div class="gap-2 mt-3 flex flex-row">
							{ data.tags.map(t => <a class={`${secondaryColor} rounded-lg p-2 text-xs cursor-pointer hover:text-white hover:underline hover:bg-black`}>{t}</a>) }
						</div>
					</div>
				</section>
			</hgroup>
			<article id="review-article" class={`${secondaryColor} px-5 mt-7 md:p-7 xl:p-14 md:rounded-t-3xl flex flex-col font-manrope`}>
				<slot />
				<ReviewSection title="Scoring">
					<div class="grid grid-cols-2 md:grid-cols-3 md:gap-5 gap-3 md:my-14">
						<RatingCard title="Difficulty" value={data.difficulty} />
						<RatingCard title="Enjoyment" value={data.enjoyment} />
						<RatingCard title="Effort" value={data.effort} />
						<RatingCard title="Delivery" value={data.delivery} />
						<RatingCard title="Utility" value={data.utility} />
						<RatingCard title="Overall rating" value={data.rating} />
					</div>
					<button id="back-to-top" class="font-bold hover:underline cursor-pointer pt-12">↑ Back to top</button>
				</ReviewSection>
			</article>
		</main>
		<Footer color={primaryColor} />
		<script>
			// Make paragraphs transition when first viewed
			const handler = () => {
				const o = new IntersectionObserver(entries => {
					entries.forEach(e => {
						if (e.isIntersecting) {
							e.target.classList.toggle("animate-visible", true);
						}
					}, { threshold: 0.5 });
				});
				const article = document.querySelector("#review-article");
				if (article) {
					Array.from(document.getElementsByTagName("article")[0].children).forEach(e => {
					o.observe(e);
				});
				}
			}
			document.addEventListener("astro:page-load", handler);
		</script>
		<script>
			// Add functionality to back to top button
			document.addEventListener("astro:page-load", () => {
				const button = document.querySelector("#back-to-top");
				if (button) {
					button.addEventListener("click", () => {
					document.body.scrollTop = 0;
					document.documentElement.scrollTop = 0;
				});
				}
			});
		</script>
		<script>
			// Make bg colour of main same colour as entire body
			document.addEventListener("astro:page-load", () => {
				const body = document.getElementsByTagName("body")[0];
				const main = document.getElementsByTagName("main")[0];
				if (body && main) {
					body.style.backgroundColor = window.getComputedStyle(main).backgroundColor;
				}
			});
		</script>
		<script>
			// Transition main and nav when scrolled down
			document.addEventListener("astro:page-load", () => {
				const main = document.getElementsByTagName("main")[0];
				const nav = document.getElementById("big-nav") as HTMLElement;
				if (main && nav) {
					const o = new IntersectionObserver(entries => {
						entries.forEach(e => {
							main.classList.toggle("transition", !e.isIntersecting);
							nav.classList.toggle("transition", !e.isIntersecting)
						});
					});
					o.observe(document.getElementsByTagName("hgroup")[0]);
				}
			});
		</script>
	</body>
</html>

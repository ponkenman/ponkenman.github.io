---
import type { ReviewData } from '../../content.config';
import type { ElemColour } from '../../scripts/ElemColour';

interface Props {
  review: ReviewData;
	colours: {
		primary: ElemColour;
		secondary: ElemColour;
	}
}
const { review, colours } = Astro.props;
---
<li>
	<colour-button data-colours={JSON.stringify(colours)}>
		<button data-review={JSON.stringify(review)} class:list={[colours.primary.hoverBg, colours.secondary.hoverText, "group", "p-5 cursor-pointer", "text-md", "grid grid-cols-3", "w-full", "course-btn", "rounded-md"]}>
	<div class:list={["font-bold text-left"]}>
		{review.id}
	</div>
	<div class:list={["col-span-2 flex flex-row justify-between"]}>
		<div class:list={["text-left mr-1 font-bv text-lg"]}>
				{review.longTitle}
		</div>
	<a class:list={["block opacity-0 hover:underline", "group-hover:opacity-100", "btn-arrow"]} href={`/reviews/${review.id.toLowerCase()}`} title={`${review.id} review`} data-astro-prefetch>â†’</a>
	</div>
		</button>
	</colour-button>
</li>
<script>
	import { openCard } from "./card";
	const courseButtons = document.querySelectorAll(".course-btn");
	courseButtons.forEach(b => b.addEventListener("click", () => openCard(b)));
</script>
<script>
import type { ElemColour } from "../../scripts/ElemColour";

	class ColourButton extends HTMLElement {
		static observedAttributes = ["active"];
		
		attributeChangedCallback(name: string, oldValue: string, newValue: string) {
			const colours = JSON.parse(this.dataset.colours as string) as { primary: ElemColour, secondary: ElemColour };
			const btn = this.querySelector(".course-btn") as HTMLElement;
			if (newValue == "true") {
				btn.classList.add(colours.primary.bg);
				btn.classList.add(colours.secondary.text);
				(btn.querySelector(".btn-arrow") as HTMLElement).style.opacity = "100";
			} else {
				btn.classList.remove(colours.primary.bg);
				btn.classList.remove(colours.secondary.text);
				(btn.querySelector(".btn-arrow") as HTMLElement).style = "";
			}
		}
	}

	customElements.define("colour-button", ColourButton);
</script>